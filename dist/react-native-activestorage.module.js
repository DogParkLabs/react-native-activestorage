import r from"rn-fetch-blob";import{btoa as t}from"abab";import e,{createContext as n,useContext as o,useState as a,useCallback as s,useMemo as i}from"react";var u=function(e){var n=e.path;try{return Promise.resolve(r.fs.hash(n,"md5")).then(function(r){var e=r.replace(/\r|\n/g,"").replace(/([\da-fA-F]{2}) ?/g,"0x$1 ").replace(/ +$/,"").split(" ").map(function(r){return parseInt(r)}),n=String.fromCharCode.apply(String,e);return t(n)})}catch(r){return Promise.reject(r)}};function c(){return(c=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r}).apply(this,arguments)}var l=0,d=function(t){var e,n=t.directUploadsUrl,o=t.file,a=t.headers,s=t.onStatusChange,i=++l,d=!1,f=function(){e&&(d=!0,e.cancel())},h=function(r){s(c({},r,{id:i,cancel:f,file:o}))};return h({status:"waiting"}),new Promise(function(t){try{return Promise.resolve(function(s,i){try{var l=Promise.resolve(function(r){var t=r.directUploadsUrl,e=r.file,n=r.headers,o=void 0===n?{}:n;try{return Promise.resolve(u({path:e.path})).then(function(r){if(!r)throw new Error("Failed to get file checksum. Path: "+e.path);var n={filename:e.name,content_type:e.type||"image/jpeg",byte_size:e.size,checksum:r};return e.metadata&&(n.metadata=e.metadata),Promise.resolve(fetch(t,{method:"POST",body:JSON.stringify({blob:n}),headers:c({"Content-Type":"application/json"},o)})).then(function(r){return r.json()})})}catch(r){return Promise.reject(r)}}({directUploadsUrl:n,file:o,headers:a})).then(function(n){var a=n.direct_upload,s=a.url,i=a.headers,u=r.wrap(o.path);(e=r.fetch("PUT",s,i,u)).uploadProgress({interval:250},function(r,t){h({status:"uploading",progress:r/t*100,totalBytes:t,uploadedBytes:r})}).then(function(r){var e=r.info().status;h(e>=200&&e<400?{status:"success",signed_id:n.signed_id}:{status:"error",error:new Error("Response not success")}),t(n.signed_id)}).catch(function(r){h(d?{status:"canceled"}:{status:"error",error:r}),t()})})}catch(r){return i(r)}return l&&l.then?l.then(void 0,i):l}(0,function(r){return h({status:"error",error:r}),t()}))}catch(r){return Promise.reject(r)}})},f=n({host:"http://localhost:3000",mountPath:"/rails/active_storage",headers:{}}),h=f.Provider,p=function(r){return e.createElement(h,{value:{host:r.host,mountPath:r.mountPath,headers:r.headers}},r.children)},m=function(r){var t,e,n=void 0===r?{}:r,u=n.onSuccess,l=n.onError,h=c({},t=o(f),{mountPath:e=t.mountPath||"/rails/active_storage",directUploadsUrl:""+t.host+e+"/direct_uploads"}),p=h.directUploadsUrl,m=h.headers,v=a([]),g=v[0],P=v[1],y=s(function(r){P(function(t){return function(r,t,e){void 0===e&&(e="id");var n=[].concat(r),o=n.findIndex(function(r){return r[e]===t[e]});return o>=0?n[o]=t:n.push(t),n}(t,r)})},[]),U=s(function(r){try{return Promise.resolve(Promise.all(r.map(function(r){return d({file:r,directUploadsUrl:p,headers:m,onStatusChange:y})}))).then(function(t){var e=t.filter(function(r){return!!r});return e.length>0&&u&&u({signedIds:e}),r.length>e.length&&l&&l(),{signedIds:e}})}catch(r){return Promise.reject(r)}},[y,u,l]),b=i(function(){return g.some(function(r){return"uploading"===r.status})},[g]),j=i(function(){return g.filter(function(r){return"success"===r.status})},[g]);return{upload:U,uploads:g,isUploading:b,successfulUploads:j,resetUploads:function(){return P([])},removeUpload:function(r){return P(g.filter(function(t){return t.id!==r}))}}},v=function(r){return(0,r.children)(m({onSuccess:r.onSuccess}))};export{p as ActiveStorageProvider,v as DirectUpload,u as checksum,d as directUpload,m as useDirectUpload};
//# sourceMappingURL=react-native-activestorage.module.js.map
